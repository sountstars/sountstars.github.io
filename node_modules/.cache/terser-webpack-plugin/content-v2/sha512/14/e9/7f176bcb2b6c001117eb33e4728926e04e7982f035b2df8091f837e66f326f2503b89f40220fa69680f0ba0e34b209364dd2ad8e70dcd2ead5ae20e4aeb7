{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{221:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"css的可视化格式模型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css的可视化格式模型\"}},[t._v(\"#\")]),t._v(\" CSS的可视化格式模型\")]),t._v(\" \"),a(\"p\"),a(\"div\",{staticClass:\"table-of-contents\"},[a(\"ul\",[a(\"li\",[a(\"a\",{attrs:{href:\"#css的可视化格式模型\"}},[t._v(\"CSS的可视化格式模型\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#display属性的影响\"}},[t._v(\"display属性的影响\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#bfc（block-formatting-context）\"}},[t._v(\"BFC（Block Formatting Context）\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#bfc特点：\"}},[t._v(\"BFC特点：\")])]),a(\"li\",[a(\"a\",{attrs:{href:\"#ifc（inline-formatting-context）\"}},[t._v(\"IFC（Inline Formatting Context）\")])])])]),a(\"p\"),t._v(\" \"),a(\"h2\",{attrs:{id:\"css的可视化格式模型-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#css的可视化格式模型-2\"}},[t._v(\"#\")]),t._v(\" CSS的可视化格式模型\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"CSS\")]),t._v(\"中规定每一个元素都有自己的盒子模型（相当于规定了这个元素如何显示）\\n然后可视化格式模型则是把这些盒子按照规则摆放到页面上，也就是如何布局\\n换句话说，盒子模型规定了怎么在页面里摆放盒子，盒子的相互作用等等\\n\")])])]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"包含块（Containing Block）\\n控制框（Controlling Box）\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"（Block Formatting Context）\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"（Inline Formatting Context）\\n定位体系\\n浮动\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n\")])])]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"包含块（Containing Block）\\n一个元素的box的定位和尺寸，会与某一矩形框有关，这个框就称之为包含块\\n元素会为它的子孙元素创建包含块，但是，并不是说元素的包含块就是它的父元素，元素的包含块与它的祖先元素的样式等有关系\\n譬如：\\n根元素是最顶端的元素，它没有父节点，它的包含块就是初始包含块\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"static\")]),t._v(\"和relative的包含块由它最近的块级、单元格或者行内块祖先元素的内容框（content）创建\\nfixed的包含块是当前可视窗口\\nabsolute的包含块由它最近的position 属性为absolute、relative或者fixed的祖先元素创建\\n如果其祖先元素是行内元素，则包含块取决于其祖先元素的direction特性\\n如果祖先元素不是行内元素，那么包含块的区域应该是祖先元素的内边距边界\\n\\n控制框（Controlling Box）\\n块框\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"\\n块级元素会生成一个块框（Block Box），块框会占据一整行，用来包含子box和生成的内容\\n块框同时也是一个块包含框（Containing Box），里面要么只包含块框，要么只包含行内框（不能混杂），如果块框内部有块级元素也有行内元素，那么行内元素会被匿名块框包围\\n行内框：\\n一个行内元素生成一个行内框\\n行内元素能排在一行，允许左右有其它元素\\n\")])])]),a(\"h2\",{attrs:{id:\"display属性的影响\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#display属性的影响\"}},[t._v(\"#\")]),t._v(\" display属性的影响\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"display的几个属性也可以影响不同框的生成：\\n\\nblock，元素生成一个块框\\ninline，元素产生一个或多个的行内框\\ninline\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"block，元素产生一个行内级块框，行内块框的内部会被当作块块来格式化，而此元素本身会被当作行内级框来格式化（这也是为什么会产生\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"）\\nnone，不生成框，不再格式化结构中，当然了，另一个visibility\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" hidden则会产生一个不可见的框\\n总结：如果一个框里，有一个块级元素，那么这个框里的内容都会被当作块框来进行格式化，因为只要出现了块级元素，就会将里面的内容分块几块，\\n每一块独占一行（出现行内可以用匿名块框解决）\\n如果一个框里，没有任何块级元素，那么这个框里的内容会被当成行内框来格式化，因为里面的内容是按照顺序成行的排列\\n\")])])]),a(\"h2\",{attrs:{id:\"bfc（block-formatting-context）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bfc（block-formatting-context）\"}},[t._v(\"#\")]),t._v(\" BFC（Block Formatting Context）\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"FC\")]),t._v(\"像是一个大箱子，里面装有很多元素\\n箱子可以隔开里面的元素和外面的元素（所以外部并不会影响\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"FC\")]),t._v(\"内部的渲染）\\n内部的规则可以是：如何定位，宽高计算，margin折叠等等 （不同类型的框参与的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"FC\")]),t._v(\"类型不同，譬如块级框对应\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"，行内框对应\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"）\\n（并不是说所有的框都会产生\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"FC\")]),t._v(\"，而是符合特定条件才会产生，只有产生了对应的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"FC\")]),t._v(\"后才会应用对应渲染规则）\\n\")])])]),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"规则：\\n在块格式化上下文中\\n每一个元素左外边与包含块的左边相接触（对于从右到左的格式化，右外边接触右边）\\n即使存在浮动也是如此（所以浮动元素正常会直接贴近它的包含块的左边，与普通元素重合）\\n除非这个元素也创建了一个新的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"bfc特点：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#bfc特点：\"}},[t._v(\"#\")]),t._v(\" BFC特点：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"总结几点\\n内部box在垂直方向，一个接一个的放置\\nbox的垂直方向由margin决定，属于同一个\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"的两个box间的margin会重叠\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"区域不会与float box重叠（可用于排版\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此\\n计算\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"的高度时，浮动元素也参与计算（不会浮动坍塌）\\n如何触发\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"？\\n\\n根元素\\nfloat属性不为none\\nposition为absolute或fixed\\ndisplay为inline\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"block\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" flex\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" inline\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"flex，table，table\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"cell，table\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"caption\\noverflow不为visible\\n这里提下，display\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" table，它本身不产生\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"，但是它会产生匿名框（包含display\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" table\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"cell的框），而这个匿名框产生\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"ifc（inline-formatting-context）\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ifc（inline-formatting-context）\"}},[t._v(\"#\")]),t._v(\" IFC（Inline Formatting Context）\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"即行内框产生的格式上下文\\n在行内格式化上下文中\\n框一个接一个地水平排列，起点是包含块的顶部。\\n水平方向上的 margin，border 和 padding 在框之间得到保留\\n框在垂直方向上可以以不同的方式对齐：它们的顶部或底部对齐，或根据其中文字的基线对齐\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"规则\\n浮动元素可能会处于包含块边缘和行框边缘之间\\n尽管在相同的行内格式化上下文中的行框通常拥有相同的宽度（包含块的宽度），它们可能会因浮动元素缩短了可用宽度，而在宽度上发生变化\\n同一行内格式化上下文中的行框通常高度不一样（如，一行包含了一个高的图形，而其它行只包含文本）\\n当一行中行内框宽度的总和小于包含它们的行框的宽，它们在水平方向上的对齐，取决于 \"),a(\"span\",{pre:!0,attrs:{class:\"token template-string\"}},[a(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[t._v(\"`\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"text-align\")]),a(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[t._v(\"`\")])]),t._v(\" 特性\\n空的行内框应该被忽略\\n即不包含文本，保留空白符，margin\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"padding\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"border非\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"的行内元素，\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"以及其他常规流中的内容\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"比如，图片，inline blocks 和 inline tables\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"，\\n并且不是以换行结束的行框，\\n必须被当作零高度行框对待\\n\\n总结：\\n行内元素总是会应用\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"渲染规则\\n行内元素会应用\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"规则渲染，譬如text\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"align可以用来居中等\\n块框内部，对于文本这类的匿名元素，会产生匿名行框包围，而行框内部就应用\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"渲染规则\\n行内框内部，对于那些行内元素，一样应用\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"渲染规则\\n另外，inline\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"block，会在元素外层产生\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IFC\")]),t._v(\"（所以这个元素是可以通过text\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"align水平居中的），当然，它内部则按照\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"BFC\")]),t._v(\"规则渲染\\n\")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}