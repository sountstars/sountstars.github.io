(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{230:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则"}},[t._v("#")]),t._v(" 正则")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#正则"}},[t._v("正则")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"正则-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则-2"}},[t._v("#")]),t._v(" 正则")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("简写"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n实例化"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘字符串’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("’修饰符’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 开头\n$ 结尾\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\\u4e00"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\\u9fa5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 中文区间范围\n\\n 换行\n\\d 一个数字\n\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" 一个非数字，（不是数字）\n修饰符：\ng "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" global 全局\ni "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" ignore 忽略\n\n\\ 转义符\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("需要注意的是在写 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" 记得转义\n\n当\\ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 字母的时候会有特殊含义，这种带有特殊含义的，我们叫元字符\n\nexec "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ɪɡˈzek"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("规则"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字符串"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n找到正则中第一个匹配的字符且放到数组中。\n\ntest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("规则"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("字符串"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n检测正则是否匹配字符串，成立就返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，否则"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);